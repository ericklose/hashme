//
//  File.swift
//  Hash Me
//
//  Created by Eric Klose on 5/20/16.
//  Copyright Â© 2016 Eric Klose. All rights reserved.
//

import Foundation
import Firebase

class FirebaseUserSettings: UIViewController {
    static let fus = FirebaseUserSettings()
    
    func changeFirebasePassword(email: String, pwd: String) {
        var passwordTextField: UITextField?
        var passwordVerifyTextField: UITextField?
        let alertController = UIAlertController(title: "Set A New Password", message: "Update Your Password From that Autogenerated One", preferredStyle: .Alert)
        let updatePassword = UIAlertAction(title: "Update Password", style: .Default, handler: { (action) -> Void in
            if let newPass = passwordTextField!.text where newPass != "" {
                if passwordTextField!.text != passwordVerifyTextField!.text {
                    self.showErrorAlert("Passwords Do Not Match", msg: "Try Again")
                } else {
                    DataService.ds.REF_BASE.changePasswordForUser(email, fromOld: pwd,
                        toNew: newPass, withCompletionBlock: { error in
                            if error != nil {
                                self.showErrorAlert("Something Went Wrong", msg: "I don't know. Figure it out. Or just try again.")
                            } else {
                                //Logged in from a password change
                                //                                self.passwordField.text = ""
                                self.showErrorAlert("Password Successfully Changed", msg: "Now use it to log in")
                                //  I'd love this to log in directly but it didn't do that right away and I'm sick of this. I should probably delete the lines below but fear losing my place or intent
                                //                                                NSUserDefaults.standardUserDefaults().setValue(authData.uid, forKey: KEY_UID)
                                //                                                self.performSegueWithIdentifier(self.SEGUE_LOGGED_IN, sender: nil)
                            }
                    })
                }
            } else {
                self.showErrorAlert("You need *A* password", msg: "There aren't even any password rules or anything!")
            }
        })
        let cancel = UIAlertAction(title: "Cancel", style: .Cancel) { (action) -> Void in
            print("Cancel Button")
        }
        alertController.addAction(updatePassword)
        alertController.addAction(cancel)
        alertController.addTextFieldWithConfigurationHandler { (textField) -> Void in
            passwordTextField = textField
            passwordTextField?.placeholder = "New Password"
            passwordTextField?.secureTextEntry = true
        }
        alertController.addTextFieldWithConfigurationHandler { (textField) -> Void in
            passwordVerifyTextField = textField
            passwordVerifyTextField?.placeholder = "Verify Password"
            passwordVerifyTextField?.secureTextEntry = true
        }
        self.presentViewController(alertController, animated: true, completion: nil)
    }
    
    func showErrorAlert(title: String, msg: String) {
        let alert = UIAlertController(title: title, message: msg, preferredStyle: .Alert)
        let action = UIAlertAction(title: "OK", style: .Default, handler: nil)
        alert.addAction(action)
        presentViewController(alert, animated: true, completion: nil)
    }
    
    
    func logoutFirebase() {
        DataService.ds.REF_BASE.unauth()
//        DataService.ds.REF_USER_CURRENT.unauth()
        self.navigationController?.popToRootViewControllerAnimated(true)
    }

}